// Automatically generated by MockGen. DO NOT EDIT!
// Source: io/etcd.go

package io

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of EtcdClient interface
type MockEtcdClient struct {
	ctrl     *gomock.Controller
	recorder *_MockEtcdClientRecorder
}

// Recorder for MockEtcdClient (not exported)
type _MockEtcdClientRecorder struct {
	mock *MockEtcdClient
}

func NewMockEtcdClient(ctrl *gomock.Controller) *MockEtcdClient {
	mock := &MockEtcdClient{ctrl: ctrl}
	mock.recorder = &_MockEtcdClientRecorder{mock}
	return mock
}

func (_m *MockEtcdClient) EXPECT() *_MockEtcdClientRecorder {
	return _m.recorder
}

func (_m *MockEtcdClient) Get(_param0 string) (string, bool, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockEtcdClientRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockEtcdClient) Put(_param0 string, _param1 string) (string, error) {
	ret := _m.ctrl.Call(_m, "Put", _param0, _param1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEtcdClientRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Put", arg0, arg1)
}

func (_m *MockEtcdClient) Del(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "Del", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEtcdClientRecorder) Del(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Del", arg0)
}

func (_m *MockEtcdClient) Children(_param0 string) ([]string, error) {
	ret := _m.ctrl.Call(_m, "Children", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEtcdClientRecorder) Children(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Children", arg0)
}
